// Initialize map
var map = ui.Map();
ui.root.widgets().reset([map]);

// Set visual features for map
map.setOptions('terrain');
map.style().set('cursor', 'crosshair');
map.setCenter(-93.6, 46.2, 6);

// Set coordinates for each lake
var locations = [[-91.764592, 47.931117],
  [-93.818537, 44.189743],
  [-93.41875, 43.902428],
  [-92.477083, 44.211143],
  [-93.168042, 45.060306],
  [-93.136559, 45.052124],
  [-93.15506, 45.038351],
  [-93.052075, 44.982684],
  [-93.007284, 44.970367],
  [-93.319372, 44.960499],
  [-92.983589, 44.949718],
  [-93.485506, 44.952972],
  [-93.062825, 45.003032],
  [-95.222714, 47.196145],
  [-89.428153, 45.910417],
  [-91.478404, 45.85049],
  [-84.633045, 46.463641],
  [-95.891413, 46.842054],
  [-95.907987, 46.774886],
  [-95.823801, 46.75396],
  [-92.499769, 45.398475],
  [-93.039584, 45.081876],
  [-94.424371, 44.96921],
  [-94.436667, 45.275895]
];
  
var names = [
  "Farm Lake",
  "Madison Lake",
  "Saint Olaf Lake",
  "Zumbro Lake",
  "Valentine Lake",
  "Island Lake",
  "Lake Josephine",
  "Lake Phalen",
  "Beaver Lake",
  "Cedar Lake",
  "Tanners Lake",
  "Tanager Lake",
  "Keller Lake",
  "Elk Lake",
  "Alma Lake",
  "Sand Lake",
  "Spectacle Lake",
  "Brandy Lake",
  "Fox Lake",
  "Abbey Lake",
  "Deer Lake",
  "Birch Lake",
  "Belle Lake",
  "Clear Lake"
];

// Draw each lake coordinate and set click area
var pts = [];
var c_rounded = [];
for (var l = 0; l < locations.length; l++) {
  pts[l] = ee.Geometry.Point(locations[l]);
  map.addLayer(pts[l]);
  c_rounded[l] = [Math.round(locations[l][0]*10)/10, Math.round(locations[l][1]*10)/10]
}

// Panel code
var graph_data = ui.Panel();
graph_data.style().set({position: 'top'});
graph_data.add(ui.Label({
  value: 'Click on a dot to show time-series data for that lake.'
}));
map.add(graph_data);

// Click a point
map.onClick(function(coords) {
  var lon_rounded = Math.round(coords.lon*10)/10;
  var lat_rounded = Math.round(coords.lat*10)/10;
  
  for (var v = 0; v < c_rounded.length; v++) {
    if (c_rounded[v][0] == lon_rounded && c_rounded[v][1] == lat_rounded) {
      graph_data.clear();
      graph_data.add(ui.Label({
        value: 'Data for ' + names[v] + ":"
      }));
      if (["Cedar Lake"].indexOf(names[v]) >= 0) {
        var name = names[v].split(" ").join("_")
        var image = ee.Image("projects/infsci-2470-water-quality/assets/"
          + name).visualize({
            bands:  ['b1', 'b2', 'b3'],
            min: 0,
            max: 255
        });
        var timeseries = ui.Thumbnail({
          image: image,
          params: {
            dimensions: '405x300',
            format: 'png'
          },
        });
        graph_data.add(timeseries);
      }
    }
  }
})