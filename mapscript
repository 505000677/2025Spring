// Initialize map
var map = ui.Map();
ui.root.widgets().reset([map]);

// Set visual features for map
map.setOptions('terrain');
map.style().set('cursor', 'crosshair');
map.setCenter(-93.6, 46.2, 6);

// Set coordinates and names for each lake
var locations = [
  [-91.764592, 47.931117],
  [-93.818537, 44.189743],
  [-93.41875, 43.902428],
  [-94.022866, 43.881185],
  [-92.477083, 44.211143],
  [-93.168042, 45.060306],
  [-93.136559, 45.052124],
  [-93.15506, 45.038351],
  [-93.062825, 45.003032],
  [-93.007284, 44.970367],
  [-93.485506, 44.952972],
  [-93.707196, 44.947897],
  [-93.547084, 44.901104],
  [-93.303275, 44.916428],
  [-93.61875, 45.036013],
  [-93.685315, 45.065243],
  [-94.313839, 45.404624],
  [-94.186981, 45.318874],
  [-94.274608, 45.273218],
  [-94.111907, 45.277083],
  [-91.873948, 46.199876],
  [-95.222714, 47.196145],
  [-95.336458, 45.981691],
  [-94.689706, 45.838579],
  [-92.14076, 45.940795],
  [-90.225682, 46.069294]
];

var names = [
  "Garden Lake",
  "Madison Lake",
  "Saint Olaf Lake",
  "Lura Lake",
  "Zumbro Lake",
  "Valentine Lake",
  "Island Lake",
  "Lake Josephine",
  "Keller Lake",
  "Beaver Lake",
  "Tanager Lake",
  "Long Lake",
  "Lake Harriet",
  "Christmas Lake",
  "Spurzem Lake",
  "Lake Sarah",
  "Pearl Lake",
  "Lake Caroline",
  "Lake Betsy",
  "Pleasant Lake",
  "Bardon Lake",
  "Elk Lake",
  "Lake Carlos",
  "Mound Lake",
  "Birch Island Lake",
  "Turtle Flambeau Flowage"
];

// Draw each lake coordinate on the map
var pts = [];
for (var l = 0; l < locations.length; l++) {
  pts[l] = ee.Geometry.Point(locations[l]);
  map.addLayer(pts[l], {"color": "dd0000"}); // Red dots for lakes
}

// Create UI panel
var graph_data = ui.Panel({
  layout: ui.Panel.Layout.flow('vertical'),
  style: {width: '450px'}
});
graph_data.add(ui.Label({
  value: 'Predicted Water Quality Factors in the Northern Midwest',
  style: {
    fontSize: '1.5vw',
    fontWeight: 'bold'
  }
}));
graph_data.add(ui.Label({
  value: 'Click on a red dot to show predicted dissolved oxygen and temperature data for that lake (2017-2019).'
}));
graph_data.add(ui.Label({
  value: 'Move the map around by holding and dragging.'
}));
ui.root.add(graph_data);

// Function to find the closest lake
function findClosestLake(clickedCoords) {
  var minDist = Infinity;
  var closestIndex = -1;
  for (var i = 0; i < locations.length; i++) {
    var dist = Math.sqrt(
      Math.pow(locations[i][0] - clickedCoords.lon, 2) +
      Math.pow(locations[i][1] - clickedCoords.lat, 2)
    );
    if (dist < minDist) {
      minDist = dist;
      closestIndex = i;
    }
  }
  return closestIndex;
}

// Click event for selecting a lake
map.onClick(function(coords) {
  var closestLakeIndex = findClosestLake(coords);
  if (closestLakeIndex === -1) {
    return;
  }

  graph_data.clear();
  
  var name = names[closestLakeIndex].split(" ").join("");
  
  // Display DO predictions
  graph_data.add(ui.Label({
    value: 'Predicted dissolved oxygen levels for ' + names[closestLakeIndex]
          + " (blue = top layer, orange = bottom layer):"
  }));
  
  var link_DO = "projects/infsci-2470-water-quality/assets/" + name + "DO";
  var image_DO = ee.Image(link_DO).visualize({
    bands: ['b1', 'b2', 'b3'],
    min: 0,
    max: 255
  });
  var timeseries_DO = ui.Thumbnail({
    image: image_DO,
    params: {
      dimensions: '505x375',
      format: 'png'
    }
  });
  graph_data.add(timeseries_DO);
  
  // Display temperature predictions
  graph_data.add(ui.Label({
    value: 'Predicted temperature levels for ' + names[closestLakeIndex] + ":"
  }));
  var link_temp = "projects/infsci-2470-water-quality/assets/" + name + "Temperature";
  var image_temp = ee.Image(link_temp).visualize({
    bands: ['b1', 'b2', 'b3'],
    min: 0,
    max: 255
  });
  var timeseries_temp = ui.Thumbnail({
    image: image_temp,
    params: {
      dimensions: '505x375',
      format: 'png'
    }
  });
  graph_data.add(timeseries_temp);
});
